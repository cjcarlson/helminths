select(Host, Parasite) %>% data.frame() %>% unique() -> acan.rept
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.oste
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.chon
est.a.amp <- copredict(acan.amph, n=7302, iter=10)[[1]][1]
est.a.ave <- copredict(acan.aves, n=10425, iter=10)[[1]][1]
est.a.mam <- copredict(acan.mamm, n=5513, iter=10)[[1]][1]
est.a.rep <- copredict(acan.rept, n=10038, iter=10)[[1]][1]
est.a.ost <- copredict(acan.oste, n=28000, iter=10)[[1]][1]
est.a.con <- copredict(acan.chon, n=1111, iter=10)[[1]][1]
est.a.fake <- c(est.a.amp,est.a.ave,est.a.mam,est.a.rep,est.a.ost,est.a.con)
acan.df <- cbind(data.frame(parasite=c(1:nrow(acan.df))), acan.df)
sum(est.a.fake)
acan.corr <- laura(acan.df, orders=c("A","B","C","D","E","F"),
est.a.fake)
#################
cest.df <- all.data[all.data$group=='Cestoda',c('Parasite','hostgroup')]
cest.df$value =1
cest.df <- unique(na.omit(cest.df))
cest.df <- acast(cest.df , Parasite ~ hostgroup)
cest.df[is.na(cest.df)] <- 0
cest.df <- cest.df[,c('Amphibia', 'Aves','Mammalia','Reptilia','Osteichthyes','Chondrichthyes')] # ADD FISH BACK - BUT > 2 FISH GROUPS CURRENTLY
cest.df <- cest.df[rowSums(cest.df)>0,]
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Amphibia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.amph
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Aves') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.aves
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Mammalia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.mamm
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Reptilia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.rept
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.oste
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.chon
est.c.amp <- copredict(cest.amph, n=7302, iter=10)[[1]][1]
est.c.ave <- copredict(cest.aves, n=10425, iter=10)[[1]][1]
est.c.mam <- copredict(cest.mamm, n=5513, iter=10)[[1]][1]
est.c.rep <- copredict(cest.rept, n=10038, iter=10)[[1]][1]
est.c.ost <- copredict(cest.oste, n=28000, iter=10)[[1]][1]
est.c.con <- copredict(cest.chon, n=1111, iter=10)[[1]][1]
est.c.fake <- c(est.c.amp,est.c.ave,est.c.mam,est.c.rep,est.c.ost,est.c.con)
cest.df <- cbind(data.frame(parasite=c(1:nrow(cest.df))), cest.df)
sum(est.c.fake)
cest.corr <- laura(cest.df, orders=c("A","B","C","D","E","F"),
est.c.fake)
#################
nema.df <- all.data[all.data$group=='Nematoda',c('Parasite','hostgroup')]
nema.df$value =1
nema.df <- unique(na.omit(nema.df))
nema.df <- acast(nema.df , Parasite ~ hostgroup)
nema.df[is.na(nema.df)] <- 0
nema.df <- nema.df[,c('Amphibia', 'Aves','Mammalia','Reptilia','Osteichthyes','Chondrichthyes')] # ADD FISH BACK - BUT > 2 FISH GROUPS CURRENTLY
nema.df <- nema.df[rowSums(nema.df)>0,]
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Amphibia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.amph
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Aves') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.aves
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Mammalia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.mamm
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Reptilia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.rept
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.oste
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> nema.chon
est.n.amp <- copredict(nema.amph, n=7302, iter=10)[[1]][1]
est.n.ave <- copredict(nema.aves, n=10425, iter=10)[[1]][1]
est.n.mam <- copredict(nema.mamm, n=5513, iter=10)[[1]][1]
est.n.rep <- copredict(nema.rept, n=10038, iter=10)[[1]][1]
est.n.ost <- copredict(nema.oste, n=28000, iter=10)[[1]][1]
est.n.con <- copredict(nema.chon, n=1111, iter=10)[[1]][1]
est.n.fake <- c(est.n.amp,est.n.ave,est.n.mam,est.n.rep,est.n.ost,est.n.con)
nema.df <- cbind(data.frame(parasite=c(1:nrow(nema.df))), nema.df)
sum(est.n.fake)
nema.corr <- laura(nema.df, orders=c("A","B","C","D","E","F"),
est.n.fake)
#################
trem.df <- all.data[all.data$group=='Trematoda',c('Parasite','hostgroup')]
trem.df$value =1
trem.df <- unique(na.omit(trem.df))
trem.df <- acast(trem.df , Parasite ~ hostgroup)
trem.df[is.na(trem.df)] <- 0
trem.df <- trem.df[,c('Amphibia', 'Aves','Mammalia','Reptilia','Osteichthyes','Chondrichthyes')] # ADD FISH BACK - BUT > 2 FISH GROUPS CURRENTLY
trem.df <- trem.df[rowSums(trem.df)>0,]
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Amphibia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.amph
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Aves') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.aves
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Mammalia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.mamm
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Reptilia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.rept
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.oste
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> trem.chon
est.t.amp <- copredict(trem.amph, n=7302, iter=10)[[1]][1]
est.t.ave <- copredict(trem.aves, n=10425, iter=10)[[1]][1]
est.t.mam <- copredict(trem.mamm, n=5513, iter=10)[[1]][1]
est.t.rep <- copredict(trem.rept, n=10038, iter=10)[[1]][1]
est.t.ost <- copredict(trem.oste, n=28000, iter=10)[[1]][1]
est.t.con <- copredict(trem.chon, n=1111, iter=10)[[1]][1]
est.t.fake <- c(est.t.amp,est.t.ave,est.t.mam,est.t.rep,est.t.ost,est.t.con)
trem.df <- cbind(data.frame(parasite=c(1:nrow(trem.df))), trem.df)
sum(est.t.fake)
trem.corr <- laura(trem.df, orders=c("A","B","C","D","E","F"),
est.t.fake)
################################################
# INTERMISSION
################################################
acan.corr+cest.corr+nema.corr+trem.corr
sum(est.a.fake,
est.c.fake,
est.n.fake,
est.t.fake)
####################
round(100*length(unique(rownames(acan.df[acan.df$Chondrichthyes==1,])))/est.a.con)
round(100*length(unique(rownames(acan.df[acan.df$Osteichthyes==1,])))/est.a.ost)
round(100*length(unique(rownames(acan.df[acan.df$Amphibia==1,])))/est.a.amp)
round(100*length(unique(rownames(acan.df[acan.df$Reptilia==1,])))/est.a.rep)
round(100*length(unique(rownames(acan.df[acan.df$Aves==1,])))/est.a.ave)
round(100*length(unique(rownames(acan.df[acan.df$Mammalia==1,])))/est.a.mam)
round(100*length(unique(rownames(cest.df[cest.df$Chondrichthyes==1,])))/est.c.con)
round(100*length(unique(rownames(cest.df[cest.df$Osteichthyes==1,])))/est.c.ost)
round(100*length(unique(rownames(cest.df[cest.df$Amphibia==1,])))/est.c.amp)
round(100*length(unique(rownames(cest.df[cest.df$Reptilia==1,])))/est.c.rep)
round(100*length(unique(rownames(cest.df[cest.df$Aves==1,])))/est.c.ave)
round(100*length(unique(rownames(cest.df[cest.df$Mammalia==1,])))/est.c.mam)
round(100*length(unique(rownames(nema.df[nema.df$Chondrichthyes==1,])))/est.n.con)
round(100*length(unique(rownames(nema.df[nema.df$Osteichthyes==1,])))/est.n.ost)
round(100*length(unique(rownames(nema.df[nema.df$Amphibia==1,])))/est.n.amp)
round(100*length(unique(rownames(nema.df[nema.df$Reptilia==1,])))/est.n.rep)
round(100*length(unique(rownames(nema.df[nema.df$Aves==1,])))/est.n.ave)
round(100*length(unique(rownames(nema.df[nema.df$Mammalia==1,])))/est.n.mam)
round(100*length(unique(rownames(trem.df[trem.df$Chondrichthyes==1,])))/est.t.con)
round(100*length(unique(rownames(trem.df[trem.df$Osteichthyes==1,])))/est.t.ost)
round(100*length(unique(rownames(trem.df[trem.df$Amphibia==1,])))/est.t.amp)
round(100*length(unique(rownames(trem.df[trem.df$Reptilia==1,])))/est.t.rep)
round(100*length(unique(rownames(trem.df[trem.df$Aves==1,])))/est.t.ave)
round(100*length(unique(rownames(trem.df[trem.df$Mammalia==1,])))/est.t.mam)
round(100*(length(unique(rownames(acan.df[acan.df$Chondrichthyes==1,])))+
length(unique(rownames(cest.df[cest.df$Chondrichthyes==1,])))+
length(unique(rownames(nema.df[nema.df$Chondrichthyes==1,])))+
length(unique(rownames(trem.df[trem.df$Chondrichthyes==1,]))))/
(est.a.con + est.c.con + est.n.con + est.t.con))
round(100*(length(unique(rownames(acan.df[acan.df$Osteichthyes==1,])))+
length(unique(rownames(cest.df[cest.df$Osteichthyes==1,])))+
length(unique(rownames(nema.df[nema.df$Osteichthyes==1,])))+
length(unique(rownames(trem.df[trem.df$Osteichthyes==1,]))))/
(est.a.ost + est.c.ost + est.n.ost + est.t.ost))
round(100*(length(unique(rownames(acan.df[acan.df$Amphibia==1,])))+
length(unique(rownames(cest.df[cest.df$Amphibia==1,])))+
length(unique(rownames(nema.df[nema.df$Amphibia==1,])))+
length(unique(rownames(trem.df[trem.df$Amphibia==1,]))))/
(est.a.amp + est.c.amp + est.n.amp + est.t.amp))
round(100*(length(unique(rownames(acan.df[acan.df$Reptilia==1,])))+
length(unique(rownames(cest.df[cest.df$Reptilia==1,])))+
length(unique(rownames(nema.df[nema.df$Reptilia==1,])))+
length(unique(rownames(trem.df[trem.df$Reptilia==1,]))))/
(est.a.rep + est.c.rep + est.n.rep + est.t.rep))
round(100*(length(unique(rownames(acan.df[acan.df$Aves==1,])))+
length(unique(rownames(cest.df[cest.df$Aves==1,])))+
length(unique(rownames(nema.df[nema.df$Aves==1,])))+
length(unique(rownames(trem.df[trem.df$Aves==1,]))))/
(est.a.ave + est.c.ave + est.n.ave + est.t.ave))
round(100*(length(unique(rownames(acan.df[acan.df$Mammalia==1,])))+
length(unique(rownames(cest.df[cest.df$Mammalia==1,])))+
length(unique(rownames(nema.df[nema.df$Mammalia==1,])))+
length(unique(rownames(trem.df[trem.df$Mammalia==1,]))))/
(est.a.mam + est.c.mam + est.n.mam + est.t.mam))
# row percentages
round(100*length(unique(rownames(acan.df)))/acan.corr)
round(100*length(unique(rownames(cest.df)))/cest.corr)
round(100*length(unique(rownames(nema.df)))/nema.corr)
round(100*length(unique(rownames(trem.df)))/trem.corr)
round(100*(length(unique(rownames(acan.df)))+
length(unique(rownames(cest.df)))+
length(unique(rownames(nema.df)))+
length(unique(rownames(trem.df))))/(acan.corr+cest.corr+nema.corr+trem.corr))
length(unique(rownames(acan.df)))+
length(unique(rownames(cest.df)))+
length(unique(rownames(nema.df)))+
length(unique(rownames(trem.df)))
#####
13426/107259
14382/107259
(107259-13426) * (1/115)
(107259-14382) * (1/148)
(1 + 2.6)*6422
(1 + 2.4)*24075
(1 + 1.2)*30439
(1 + 3.1)*46322
(361860-13426) * (1/115)
(361860-14382) * (1/148)
library(ggplot2)
library(rgdal)
library(sf)
# RUN "DIVERSITY ESTIMATES.R" FIRST
setwd('C:/Users/cjcar/Dropbox/HowManyHelminths2019')
library(codependent)
library(tidyverse)
library(reshape2)
all.data <- read_delim('associations cleaned.csv',delim=',')[,-1]
## CLEAN UP THE GEOGRAPHY ONCE AND FOR ALL
america.names <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'Colorado',
"District of Columbia/Delaware/New Jersey/Maryland",
'Florida', 'Georgia (USA)', 'Hawaiian Islands', 'Idaho',
'Illinois','Indiana', 'Kansas', 'Kentucky', 'Louisiana',
"Maine",'Michigan','Minnesota','Missouri','Montana',"Mississippi",
"Nebraska", "New Hampshire/Vermont/Massachusetts/Connecticut/Rhode Is.",
'Ohio', 'Oklahoma', 'Oregon', 'Pacific coast of USA', "Pennsylvania",
"Puerto Rico", "Tennessee", 'Texas', 'Virginia', 'Washington',
"West Virginia", 'Wisconsin', 'Wyoming', "Nevada", "New Mexico", "North Dakota",
'New York State', "Utah", "California", "Iowa","North Carolina",
"South Carolina", "South Dakota")
all.data$locality[all.data$locality %in% america.names] <- 'United States'
canada.names <- c('Alberta', 'Labrador', 'Labrador + Newfoundland', 'Manitoba',
"New Brunswick","New Brunswick + Nova Scotia", "Newfoundland",
"Northwest Territories", "Nova Scotia", "Ontario", "Quebec",
"Saskatchewan", "Yukon", "Yukon + Northwest Territories",
"British Columbia")
all.data$locality[all.data$locality %in% canada.names] <- 'Canada'
aus.names <- c("New South Wales", "Western Australia", 'Queensland',
"South Australia", 'Victoria')
all.data$locality[all.data$locality %in% aus.names] <- 'Australia'
all.data <- separate_rows(all.data, locality, sep='\\+', convert=TRUE)
unique(all.data$locality)
all.data$locality <- recode(all.data$locality,
Azerbaidzan = 'Azerbaijan',
Azores = 'Portugal',
' Qatar ' = 'Qatar',
' United Arab Emirates' = 'United Arab Emirates',
"Balearic Islands" = "Spain",
" Luxembourg" = "Luxembourg",
'Belgium ' = "Belgium",
"Borneo" = "Malaysia+Brunei+Indonesia",
"Byelorussia" = "Belarus",
"Central Africa"='Central African Republic',
"Corsica" = "France",
"Eire " = "Northern Ireland",
" N. Ireland" = "Northern Ireland",
"England, Wales " = "United Kingdom",
' Isle of Man'="United Kingdom",
" Latvia"="Latvia",
"Fijian Islands"='Fiji',
"Georgia (USSR)"='Georgia',
"Iraq "="Iraq",
" Kuwait"="Kuwait",
"Israel "="Israel",
" Jordan " = "Jordan",
" Lebanon"="Lebanon",
'Kirgizia'='Kyrgyzstan',
"Mali "='Mali',
' Burkina Faso'='Burkina Faso',
"Natal"='South Africa',
"Sardinia"="Italy",
"Senegal "='Senegal',
' The Gambia '='The Gambia',
' Guinea-Bassau'='Guinea-Bassau',
"Spain "='Spain',
' Andalusia'="Spain",
'Switzerland '='Switzerland',
" Lichtenstein"="Lichtenstein",
'Tadzhikistan'='Tajikistan',
'Uganda '='Uganda',
' Burundi '='Burundi',
' Rwanda'="Rwanda",
"Ukraine, incl. Moldavia"='Ukraine',
"Benin "='Benin',
' Togo '='Togo',
' Ghana'='Ghana',
'Burma [Myanmar]'='Myanmar',
' Haiti'="Haiti",
'Dominican Republic '="Dominican Republic",
'Congo'='Republic of Congo',
"Ethiopia (incl. Dhibouti)"='Ethiopia+Djibouti',
'Gabon '='Gabon',
' Congo '='Republic of Congo',
' Equatorial Guinea'='Equatorial Guinea',
'Guinea '='Guinea',
'Sierra Leone '='Sierra Leone',
' Liberia'='Liberia',
'Sabah'='Malaysia',
'Sicily '="Italy",
' Malta'="Italy",
'Society Islands (incl. Tahiti)'='France',
"Southern Yemen"='Yemen',
"Southern Yemen "="Yemen",
" Yemen"="Yemen",
"Spitzbergen (Svalbard)"="Norway",
'Sumatra'='Indonesia',
"Transvaal"='South Africa',
"Galapagos Islands"='Ecuador',
'Gibraltar'='Spain',
'Orange Free State'='South Africa',
'Kampuchea' = "Cambodia",
"Java" = "Indonesia",
"Finno-Karelian ASSR" ='Russia',
"Russia (Asian)" = "Russia",
"Russia (European)" = "Russia",
'Yakut ASSR' = "Russia")
all.data <- unique(separate_rows(all.data, locality, sep='\\+', convert=TRUE))
#########
load("mammalRichnessReduced.RData")
iso$Name[iso$Name=="Congo, the Democratic Republic of the"] <- "Democratic Republic of the Congo"
iso$Name[iso$Name=="Iran, Islamic Republic of"] <- "Iran"
iso$Name[iso$Name=="Korea, Republic of"] <- "South Korea"
iso$Name[iso$Name=="Lao People's Democratic Republic"] <- "Laos"
iso$Name[iso$Name=="Macedonia, the former Yugoslav Republic of"] <- 'Macedonia'
iso$Name[iso$Name=="Korea, Democratic People's Republic of" ] <- "North Korea"
iso$Name[iso$Name=="Russian Federation"] <- 'Russia'
iso$Name[iso$Name=="Venezuela, Bolivarian Republic of"] <- 'Venezuela'
iso$Name[iso$Name=="Viet Nam"] <- 'Vietnam'
### Pred
pred.2 <- function(model, n.indep) {
q <- stats::coef(model)
est <- q["b"] * (n.indep)^(q["z"])
return(est)
}
b.a <- binera(acan.mamm, iter=100)
b.c <- binera(cest.mamm, iter=100)
b.n <- binera(nema.mamm, iter=100)
b.t <- binera(trem.mamm, iter=100)
iso$ac <- sapply(iso$mammalRichness, pred.2, model=b.a)
iso$ce <- sapply(iso$mammalRichness, pred.2, model=b.c)
iso$ne <- sapply(iso$mammalRichness, pred.2, model=b.n)
iso$tr <- sapply(iso$mammalRichness, pred.2, model=b.t)
iso$helminths <- iso$ac + iso$ce + iso$ne + iso$tr
####
iso$ac.known <- 0
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Mammalia') %>%
data.frame() %>% unique() -> sub.df
for (i in 1:length(iso$Name)) {
name <- iso$Name[i]
if(name %in% sub.df$locality) {
iso$ac.known[i] <- length(unique(sub.df[sub.df$locality==name,'Parasite']))
}
}
iso$ce.known <- 0
all.data %>% filter(group=='Cestoda') %>% filter(hostgroup=='Mammalia') %>%
data.frame() %>% unique() -> sub.df
for (i in 1:length(iso$Name)) {
name <- iso$Name[i]
if(name %in% sub.df$locality) {
iso$ce.known[i] <- length(unique(sub.df[sub.df$locality==name,'Parasite']))
}
}
iso$ne.known <- 0
all.data %>% filter(group=='Nematoda') %>% filter(hostgroup=='Mammalia') %>%
data.frame() %>% unique() -> sub.df
for (i in 1:length(iso$Name)) {
name <- iso$Name[i]
if(name %in% sub.df$locality) {
iso$ne.known[i] <- length(unique(sub.df[sub.df$locality==name,'Parasite']))
}
}
iso$tr.known <- 0
all.data %>% filter(group=='Trematoda') %>% filter(hostgroup=='Mammalia') %>%
data.frame() %>% unique() -> sub.df
for (i in 1:length(iso$Name)) {
name <- iso$Name[i]
if(name %in% sub.df$locality) {
iso$tr.known[i] <- length(unique(sub.df[sub.df$locality==name,'Parasite']))
}
}
iso$helm.known <- iso$ac.known + iso$ce.known + iso$ne.known + iso$tr.known
iso$ac.desc <- round((iso$ac-iso$ac.known)/(iso$ac)*100)
iso$ce.undesc <- round((iso$ce-iso$ce.known)/(iso$ce)*100)
iso$ne.undesc <- round((iso$ne-iso$ne.known)/(iso$ne)*100)
iso$tr.undesc <- round((iso$tr-iso$tr.known)/(iso$tr)*100)
iso$helm.undesc <- round((iso$helminths-iso$helm.known)/(iso$helminths)*100)
#sp <- as_Spatial(st_cast(iso))
#writeOGR(sp, dsn='.', layer='helminths2.shp', driver='ESRI Shapefile')
#save.image("C:/Users/cjcar/Dropbox/HowManyHelminths2019/Maps workspace backup.RData")
g1 <- ggplot(data = iso) +
geom_sf(aes(fill = helm.undesc)) + coord_sf(datum = NA) +
scale_fill_viridis_c(option = "plasma") +
labs(fill = "Undocumented") + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggsave("Figure4c.pdf", plot=g1, width = 10, height = 5)
g2 <- ggplot(data = iso) +
geom_sf(aes(fill = helminths)) + coord_sf(datum = NA) +
scale_fill_viridis_c(option = "plasma", trans='sqrt') + theme_void() +
labs(fill = "Possible") + theme(panel.background = element_blank())
ggsave("Figure4a.pdf", plot=g2, width = 10, height = 5)
g3 <- ggplot(data = iso) +
geom_sf(aes(fill = helm.known)) + coord_sf(datum = NA) +
scale_fill_viridis_c(option = "plasma") + theme_void() +
labs(fill = "Known") + theme(panel.background = element_blank())
ggsave("Figure4b.pdf", plot=g3, width = 10, height = 5)
ggsave("Figure4c.pdf", plot=g1, width = 11, height = 5)
ggsave("Figure4a.pdf", plot=g2, width = 11, height = 5)
ggsave("Figure4b.pdf", plot=g3, width = 11, height = 5)
g2 <- ggplot(data = iso) +
geom_sf(aes(fill = helminths)) + coord_sf(datum = NA) +
scale_fill_viridis_c(option = "plasma", trans='sqrt') + theme_void() +
labs(fill = "Possible    ") + theme(panel.background = element_blank())
ggsave("Figure4a.pdf", plot=g2, width = 11, height = 5)
g3 <- ggplot(data = iso) +
geom_sf(aes(fill = helm.known)) + coord_sf(datum = NA) +
scale_fill_viridis_c(option = "plasma") + theme_void() +
labs(fill = "Known      ") + theme(panel.background = element_blank())
ggsave("Figure4b.pdf", plot=g3, width = 11, height = 5)
setwd('C:/Users/cjcar/Dropbox/HowManyHelminths2019')
library(codependent)
library(tidyverse)
library(reshape2)
all.data <- read_delim('associations cleaned.csv',delim=',')[,-1]
all.data$hostgroup[all.data$hostgroup=='Chondrostei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Holostei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Cladistei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Teleostei'] <- 'Osteichthyes'
#################
acan.df <- all.data[all.data$group=='Acanthocephala',c('Parasite','hostgroup')]
acan.df$value =1
acan.df <- unique(na.omit(acan.df))
acan.df <- acast(acan.df , Parasite ~ hostgroup)
acan.df[is.na(acan.df)] <- 0
acan.df <- acan.df[,c('Amphibia', 'Aves','Mammalia','Reptilia','Osteichthyes','Chondrichthyes')] # ADD FISH BACK - BUT > 2 FISH GROUPS CURRENTLY
acan.df <- acan.df[rowSums(acan.df)>0,]
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Amphibia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.amph
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Aves') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.aves
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Mammalia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.mamm
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Reptilia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.rept
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.oste
all.data %>% filter(group=='Acanthocephala') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> acan.chon
est.a.amp <- copredict(acan.amph, n=7302, iter=10)[[1]][1]
?binera
est.a.amp <- copredict(acan.amph, n=7302, iter=10, plot=TRUE)
copredict(acan.amph, n=7302, iter=10, plot=TRUE)
binera(acan.amph, n=7302, iter=10, plot=TRUE)
binera(acan.amph, iter=10, plot=TRUE)
est.a.amp
est.a.amp[[1]][1]
est.a.amp[[1]][1]^(1/est.a.amp[[2]]$z)
est.a.amp[[1]][1]^(1/est.a.amp[[2]][2])
est.a.amp[[1]][[1]]^(1/est.a.amp[[2]][[2]])
est.a.amp[[2]][[1]]
est.a.amp[[2]][[2]])
est.a.amp[[2]][[2]]
(est.a.amp[[1]][[1]]^(1/est.a.amp[[2]][[2]]))/est.a.amp[[2]][[1]]
(7302^0.65)*2.25
(7302^0.65)*2.252
(est.a.amp[[1]][[1]]/est.a.amp[[2]][[1]])^(1/est.a.amp[[2]][[2]])
function(rate) {(rate*est.a.amp[[1]][[1]]/est.a.amp[[2]][[1]])^(1/est.a.amp[[2]][[2]])}
hostest <- function(rate) {(rate*est.a.amp[[1]][[1]]/est.a.amp[[2]][[1]])^(1/est.a.amp[[2]][[2]])}
hostest(0.5)
hostest(1)
hostest <- function(codobj, rate) {(rate*codobj[[1]][[1]]/codobj[[2]][[1]])^(1/codobj[[2]][[2]])}
hostest(est.a.amp, 0.5)
set.seed(8675309)
setwd('~/Github/helminths')
all.data <- read_delim('./data/associations cleaned v2.csv',delim=',')[,-1]
all.data$hostgroup[all.data$hostgroup=='Chondrostei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Holostei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Cladistei'] <- 'Osteichthyes'
all.data$hostgroup[all.data$hostgroup=='Teleostei'] <- 'Osteichthyes'
cest.df <- all.data[all.data$group=='Cestodes',c('Parasite','hostgroup')]
cest.df$value =1
cest.df <- unique(na.omit(cest.df))
cest.df <- acast(cest.df , Parasite ~ hostgroup)
cest.df[is.na(cest.df)] <- 0
cest.df <- cest.df[,c('Amphibia', 'Aves','Mammalia','Reptilia','Osteichthyes','Chondrichthyes')] # ADD FISH BACK - BUT > 2 FISH GROUPS CURRENTLY
cest.df <- cest.df[rowSums(cest.df)>0,]
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Amphibia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.amph
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Aves') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.aves
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Mammalia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.mamm
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Reptilia') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.rept
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Osteichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.oste
all.data %>% filter(group=='Cestodes') %>% filter(hostgroup=='Chondrichthyes') %>%
select(Host, Parasite) %>% data.frame() %>% unique() -> cest.chon
est.c.amp <- copredict(cest.amph, n=7302, iter=100)[[1]][1]
est.c.ave <- copredict(cest.aves, n=10425, iter=100)[[1]][1]
est.c.mam <- copredict(cest.mamm, n=5513, iter=100)[[1]][1]
est.c.amp <- copredict(cest.amph, n=7302, iter=100)
est.c.ave <- copredict(cest.aves, n=10425, iter=100)
est.c.mam <- copredict(cest.mamm, n=5513, iter=100)
est.c.rep <- copredict(cest.rept, n=10038, iter=100)
est.c.ost <- copredict(cest.oste, n=28000, iter=100)
est.c.con <- copredict(cest.chon, n=1111, iter=100)
hostest(est.c.amp, 0.5)
hostest(est.c.ave, 0.5)
hostest(est.c.amp, 0.5)
hostest(est.c.ave, 0.5)
hostest(est.c.mam, 0.5)
hostest(est.c.rep, 0.5)
length(unique(cest.amph$Host))
hostest(est.c.con, 0.5) - length(unique(cest.cond$Host))
hostest(est.c.amp, 0.5) - length(unique(cest.amph$Host))
hostest(est.c.ave, 0.5) - length(unique(cest.aves$Host))
hostest(est.c.mam, 0.5) - length(unique(cest.mamm$Host))
hostest(est.c.rep, 0.5) - length(unique(cest.rept$Host))
hostest(est.c.ost, 0.5) - length(unique(cest.oste$Host))
hostest(est.c.con, 0.5) - length(unique(cest.chon$Host))
1179+2530+3133+3583
length(unique(cest.mamm$Host))
length(unique(cest.df$Host))
head(cest.df)
