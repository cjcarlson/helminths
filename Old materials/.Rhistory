lines(seq(1,365,1), log(sums.c[i,]), col='grey80')
}
lines(seq(1,365,1), log(sums.c[101,]), lwd=4)
lines(seq(1,365,1), log(sums.c[102,]), lwd=4, lty=3)
sums.c[101,360]
sums.c[102,360]
library(rgdal)
mor97.out <- readRDS("/Users/ericdougherty/Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai97_100Sims.rds")
counties <- readOGR(dsn='/Users/ericdougherty/Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
counties <- counties@data
which.mor97 <- which(counties$mor97 > 0)
# List of Recovered by Simulation (data frame with rows=infected counties, cols=365 days)
mor97.R <- list()
for (k in 1:100) {
sim.frame <-data.frame(matrix(0,10,365))
for (i in 1:length(which.mor97)) {
id <- which.mor97[i]
sim.frame[i,] <- data.frame(mor97.out[[id]][[2]][k,])
}
mor97.R[[k]] <- sim.frame
print(k)
}
# sums.c of the Recovered individuals across all of the counties per day
sums.c <- data.frame(1,10,360)
for (i in 1:100) {
for (j in 1:360) {
sums.c[i,j] <- sum(mor97.R[[i]][,j])
}
}
# Final row with the mean Recovered from 100 sims for the dark line
for (k in 1:360) {
sums.c[101,k] <- mean(sums.c[1:100,k])
sums.c[102,k] <- median(sums.c[1:100,k])
}
# Regular Recovered Plot
plot(seq(1,360,1), sums.c[1,], type='l', ylim=c(0,max(sums.c[,360]) + 5000), col='grey80')
for (i in 2:100) {
lines(seq(1,360,1), sums.c[i,], col='grey80')
}
lines(seq(1,360,1), sums.c[101,], lwd=4)
lines(seq(1,360,1), sums.c[102,], lwd=4, lty=3)
# Log-scaled Recovered Plot
#plot(seq(1,360,1), log(sums.c[1,]), type='l', ylim=c(0,log(max(sums.c[,365])) + 1), col='grey80')
#for (i in 2:100) {
#  lines(seq(1,360,1), log(sums.c[i,]), col='grey80')
#}
#lines(seq(1,360,1), log(sums.c[101,]), lwd=4)
#lines(seq(1,360,1), log(sums.c[102,]), lwd=4, lty=3)
##############
library(rgdal)
mor97.out <- readRDS("C:/Users/cjcar/Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai97_100Sims.rds")
counties <- readOGR(dsn='C:/Users/cjcar/Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
counties <- counties@data
which.mor97 <- which(counties$mor97 > 0)
# List of Recovered by Simulation (data frame with rows=infected counties, cols=365 days)
mor97.R <- list()
for (k in 1:100) {
sim.frame <-data.frame(matrix(0,10,365))
for (i in 1:length(which.mor97)) {
id <- which.mor97[i]
sim.frame[i,] <- data.frame(mor97.out[[id]][[2]][k,])
}
mor97.R[[k]] <- sim.frame
print(k)
}
# sums.c of the Recovered individuals across all of the counties per day
sums.c <- data.frame(1,10,360)
for (i in 1:100) {
for (j in 1:360) {
sums.c[i,j] <- sum(mor97.R[[i]][,j])
}
}
# Final row with the mean Recovered from 100 sims for the dark line
for (k in 1:360) {
sums.c[101,k] <- mean(sums.c[1:100,k])
sums.c[102,k] <- median(sums.c[1:100,k])
}
# Regular Recovered Plot
plot(seq(1,360,1), sums.c[1,], type='l', ylim=c(0,max(sums.c[,360]) + 5000), col='grey80')
for (i in 2:100) {
lines(seq(1,360,1), sums.c[i,], col='grey80')
}
lines(seq(1,360,1), sums.c[101,], lwd=4)
lines(seq(1,360,1), sums.c[102,], lwd=4, lty=3)
# Log-scaled Recovered Plot
#plot(seq(1,360,1), log(sums.c[1,]), type='l', ylim=c(0,log(max(sums.c[,365])) + 1), col='grey80')
#for (i in 2:100) {
#  lines(seq(1,360,1), log(sums.c[i,]), col='grey80')
#}
#lines(seq(1,360,1), log(sums.c[101,]), lwd=4)
#lines(seq(1,360,1), log(sums.c[102,]), lwd=4, lty=3)
##############
library(rgdal)
carlson.out <- readRDS("C:/Users/cjcar/Dropbox/Zika Margin of Error/Zika_Trajectories/Carlson_100Sims.rds")
counties <- readOGR(dsn='C:/Users/cjcar/Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
counties <- counties@data
which.carlson <- which(counties$carlson == 1)
# List of Recovered by Simulation (data frame with rows=infected counties, cols=365 days)
carlson.R <- list()
for (k in 1:100) {
sim.frame <-data.frame(matrix(0,length(which.carlson),365))
for (i in 1:length(which.carlson)) {
id <- which.carlson[i]
sim.frame[i,] <- data.frame(carlson.out[[id]][[2]][k,])
}
carlson.R[[k]] <- sim.frame
print(k)
}
# sums.c of the Recovered individuals across all of the counties per day
sums.c <- data.frame(1,100,365)
for (i in 1:100) {
for (j in 1:365) {
sums.c[i,j] <- sum(carlson.R[[i]][,j])
}
}
# Final row with the mean Recovered from 100 sims for the dark line
for (k in 1:365) {
sums.c[101,k] <- mean(sums.c[1:100,k])
sums.c[102,k] <- median(sums.c[1:100,k])
}
# Regular Recovered Plot
plot(seq(1,365,1), sums.c[1,], type='l', ylim=c(0,max(sums.c[,365]) + 5000), col='grey80')
for (i in 2:100) {
lines(seq(1,365,1), sums.c[i,], col='grey80')
}
lines(seq(1,365,1), sums.c[101,], lwd=4)
lines(seq(1,365,1), sums.c[102,], lwd=4, lty=3)
# Log-scaled Recovered Plot
plot(seq(1,365,1), log(sums.c[1,]), type='l', ylim=c(0,log(max(sums.c[,365])) + 1), col='grey80')
for (i in 2:100) {
lines(seq(1,365,1), log(sums.c[i,]), col='grey80')
}
lines(seq(1,365,1), log(sums.c[101,]), lwd=4)
lines(seq(1,365,1), log(sums.c[102,]), lwd=4, lty=3)
sums.c[101,360]
sums.c[102,360]
library(rgdal)
carlson.out <- readRDS("C:/Users/cjcar/Dropbox/Zika Margin of Error/Zika_Trajectories/Carlson_100Sims.rds")
counties <- readOGR(dsn='C:/Users/cjcar/Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
counties <- counties@data
which.carlson <- which(counties$carlson == 1)
# List of Recovered by Simulation (data frame with rows=infected counties, cols=365 days)
carlson.R <- list()
for (k in 1:100) {
sim.frame <-data.frame(matrix(0,length(which.carlson),365))
for (i in 1:length(which.carlson)) {
id <- which.carlson[i]
sim.frame[i,] <- data.frame(carlson.out[[id]][[2]][k,])
}
carlson.R[[k]] <- sim.frame
print(k)
}
# sums.c of the Recovered individuals across all of the counties per day
sums.c <- data.frame(1,100,365)
for (i in 1:100) {
for (j in 1:365) {
sums.c[i,j] <- sum(carlson.R[[i]][,j])
}
}
# Final row with the mean Recovered from 100 sims for the dark line
for (k in 1:365) {
sums.c[101,k] <- mean(sums.c[1:100,k])
sums.c[102,k] <- median(sums.c[1:100,k])
}
# Regular Recovered Plot
plot(seq(1,365,1), sums.c[1,], type='l', ylim=c(0,max(sums.c[,365]) + 5000), col='grey80')
for (i in 2:100) {
lines(seq(1,365,1), sums.c[i,], col='grey80')
}
lines(seq(1,365,1), sums.c[101,], lwd=4)
lines(seq(1,365,1), sums.c[102,], lwd=4, lty=3)
# Log-scaled Recovered Plot
plot(seq(1,365,1), log(sums.c[1,]), type='l', ylim=c(0,log(max(sums.c[,365])) + 1), col='grey80')
for (i in 2:100) {
lines(seq(1,365,1), log(sums.c[i,]), col='grey80')
}
lines(seq(1,365,1), log(sums.c[101,]), lwd=4)
lines(seq(1,365,1), log(sums.c[102,]), lwd=4, lty=3)
sums.c[102,360]
sums.c[101,360]
library(rgdal)
mor97.out <- readRDS("/Users/ericdougherty/Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai97_100Sims.rds")
mor97.out <- readRDS("C:/Users/cjcar//Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai97_100Sims.rds")
counties <- readOGR(dsn='C:/Users/cjcar//Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
mor97.out <- readRDS("C:/Users/cjcar/Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai97_100Sims.rds")
mor97.out <- readRDS("C:/Users/cjcar/Dropbox/Zika Margin of Error/Zika_Trajectories/Mordecai_New/Mordecai25_100Sims.rds")
counties <- readOGR(dsn='C:/Users/cjcar//Dropbox/Zika Margin of Error',layer='ZikaByCountyAll')
counties <- counties@data
which.mor97 <- which(counties$mor97 > 0)
which.mor25m <- which(counties$mor25 > 0)
mor97.R <- list()
for (k in 1:100) {
sim.frame <-data.frame(matrix(0,10,365))
for (i in 1:length(which.mor97)) {
id <- which.mor97[i]
sim.frame[i,] <- data.frame(mor97.out[[id]][[2]][k,])
}
mor97.R[[k]] <- sim.frame
print(k)
}
sums.c <- data.frame(1,10,360)
for (i in 1:100) {
for (j in 1:360) {
sums.c[i,j] <- sum(mor97.R[[i]][,j])
}
}
for (k in 1:360) {
sums.c[101,k] <- mean(sums.c[1:100,k])
sums.c[102,k] <- median(sums.c[1:100,k])
}
plot(seq(1,360,1), sums.c[1,], type='l', ylim=c(0,max(sums.c[,360]) + 5000), col='grey80')
for (i in 2:100) {
lines(seq(1,360,1), sums.c[i,], col='grey80')
}
lines(seq(1,360,1), sums.c[101,], lwd=4)
lines(seq(1,360,1), sums.c[102,], lwd=4, lty=3)
plot(seq(1,360,1), log(sums.c[1,]), type='l', ylim=c(0,log(max(sums.c[,365])) + 1), col='grey80')
usnpc <- read.csv(file.choose())
View(usnpc)
usnpc <- read.csv(file.choose())
usnpc <- read.csv(file.choose(),header=FALSE)
View(usnpc)
usnpc[1,1] <- usnpc[2,1]
unique(usnpc[,1])
data2 <- read.csv(file.choose())
View(data2)
unique(data2$ScientificName)
load("C:/Users/cjcar/Desktop/April 25 Lab/Backup just in case.RData")
plot(BiomodEF)
plot(myBiomodEF)
install.packages(c('maps','dismo','rgeos','rgdal','rJava','tiff','rworldmap','maptools','biomod2'))
library(maps)
library(dismo)
library(rgeos)
library(rgdal)
library(rJava)
library(tiff)
library(rworldmap)
library(maptools)
library(biomod2)
install.packages(c("maps", "dismo", "rgeos", "rgdal", "rJava", "tiff", "rworldmap", "maptools", "biomod2"))
setwd('C:/Users/Colin/Desktop/April 25 Lab')
library(rgbif)
algae <- occ_data(classKey = 'Chlorophyta')
algae <- occ_data(familyKey = "Ulvophyceae")
?rgbif
name_lookup('Ulvophyceae')
bs
library(dismo)
library(raster)
library(maps)
library(maptools)
library(mapdata)
library(plyr)
lat_min <- 0
lat_max <- 90
lon_min <- -180
lon_max <- -25
if( !file.exists("output/bioclim.grd") ) {
bioclim <- crop(
raster::getData("worldclim", var="bio", res=2.5),
c(lon_min, lon_max, lat_min, lat_max)
)
raster::writeRaster(bioclim, filename="output/bioclim.grd", overwrite=T)
}
load("C:/Users/cjcar/Dropbox/ZikaFuturesCC/PAR_REFORMAT_ALL.R")
View(PAR.reformat)
ggplot(PAR.ref2, aes(x=Months, y=PopulationAtRisk, colour=interaction(RCP,Method), group=interaction(GCM,RCP,Method))) +
geom_errorbar(aes(ymin=LowerBound, ymax=UpperBound), width=.5, position=pd) +
geom_line(position=pd,aes(linetype=Method)) +
geom_rangeframe(col='black') +
scale_fill_ptol() +
ylab('Population at Risk') +
scale_x_continuous(breaks = c(0:12)) +
theme_few(base_size = 15) +
theme(panel.grid.major.y = element_line(colour="light grey", size=0.1)) +
geom_point(position=pd, size=3) +
facet_wrap(~Year+Mosquito,ncol=2)
library(ggthemes)
ggplot(PAR.ref2, aes(x=Months, y=PopulationAtRisk, colour=interaction(RCP,Method), group=interaction(GCM,RCP,Method))) +
geom_errorbar(aes(ymin=LowerBound, ymax=UpperBound), width=.5, position=pd) +
geom_line(position=pd,aes(linetype=Method)) +
geom_rangeframe(col='black') +
scale_fill_ptol() +
ylab('Population at Risk') +
scale_x_continuous(breaks = c(0:12)) +
theme_few(base_size = 15) +
theme(panel.grid.major.y = element_line(colour="light grey", size=0.1)) +
geom_point(position=pd, size=3) +
facet_wrap(~Year+Mosquito,ncol=2)
library(ggplot2)
ggplot(PAR.ref2, aes(x=Months, y=PopulationAtRisk, colour=interaction(RCP,Method), group=interaction(GCM,RCP,Method))) +
geom_errorbar(aes(ymin=LowerBound, ymax=UpperBound), width=.5, position=pd) +
geom_line(position=pd,aes(linetype=Method)) +
geom_rangeframe(col='black') +
scale_fill_ptol() +
ylab('Population at Risk') +
scale_x_continuous(breaks = c(0:12)) +
theme_few(base_size = 15) +
theme(panel.grid.major.y = element_line(colour="light grey", size=0.1)) +
geom_point(position=pd, size=3) +
facet_wrap(~Year+Mosquito,ncol=2)
for (i in 1:nrow(PAR.reformat)) {
scen <- PAR.reformat$Scenario[[i]]
PAR.reformat$posterior[i] <- if(length(grep("25",scen))==1){'2.5%'}else{if(length(grep("50a",scen))==1){'50%'}else{if(length(grep("97",scen))==1){'97.5%'}}}
}
PAR.ref2a <- PAR.reformat[PAR.reformat$posterior=="50%",]
PAR.ref2b <- PAR.reformat[PAR.reformat$posterior=="2.5%",]
PAR.ref2c <- PAR.reformat[PAR.reformat$posterior=="97.5%",]
PAR.ref2 <- cbind(PAR.ref2a[,c(5,6,7,8,9,2,3)],PAR.ref2b[,3])
PAR.ref2 <- cbind(PAR.ref2,PAR.ref2c[,3])
colnames(PAR.ref2) <- c("Mosquito","Method","Year","RCP","GCM","Months","PopulationAtRisk","LowerBound","UpperBound")
PAR.ref2 <- PAR.ref2[!PAR.ref2$GCM=='AC',]
nrow(PAR.ref2)
PAR.ref3 <- PAR.ref2[PAR.ref2$Method=='Maximum',]
pd <- position_dodge(0.5) # move them .05 to the left and right
ggplot(PAR.ref2, aes(x=Months, y=PopulationAtRisk, colour=interaction(RCP,Method), group=interaction(GCM,RCP,Method))) +
geom_errorbar(aes(ymin=LowerBound, ymax=UpperBound), width=.5, position=pd) +
geom_line(position=pd,aes(linetype=Method)) +
geom_rangeframe(col='black') +
scale_fill_ptol() +
ylab('Population at Risk') +
scale_x_continuous(breaks = c(0:12)) +
theme_few(base_size = 15) +
theme(panel.grid.major.y = element_line(colour="light grey", size=0.1)) +
geom_point(position=pd, size=3) +
facet_wrap(~Year+Mosquito,ncol=2)
ggplot(PAR.ref2, aes(x=Months, y=PopulationAtRisk, colour=interaction(RCP), group=interaction(GCM,RCP,Method))) +
geom_errorbar(aes(ymin=LowerBound, ymax=UpperBound), width=.5, position=pd) +
geom_line(position=pd,aes(linetype=Method)) +
geom_rangeframe(col='black') +
scale_fill_ptol() +
ylab('Population at Risk') +
scale_x_continuous(breaks = c(0:12)) +
theme_few(base_size = 15) +
theme(panel.grid.major.y = element_line(colour="light grey", size=0.1)) +
geom_point(position=pd, size=3) +
facet_wrap(~Year+Mosquito,ncol=2)
PAR.sub1 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub1
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti']
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti',]
max(PAR.sub1.1$PopulationAtRisk)
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.2 <- PAR.sub1[PAR.sub1$mosquito=='Ae. albopictus',]
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==max(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==min(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub2 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub2.1 <- PAR.sub2[PAR.sub2$mosquito=='Ae. aegypti',]
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub1 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti',]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.2 <- PAR.sub1[PAR.sub1$mosquito=='Ae. albopictus',]
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==max(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==min(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub2 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub2.1 <- PAR.sub2[PAR.sub2$mosquito=='Ae. aegypti',]
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub1 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti',]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.2 <- PAR.sub1[PAR.sub1$mosquito=='Ae. albopictus',]
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==max(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==min(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub2 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub2.1 <- PAR.sub2[PAR.sub2$mosquito=='Ae. aegypti',]
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub1.1$Months
PAR.sub1 <- PAR.sub1[PAR.sub1$Months==12,]
PAR.sub1 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub1 <- PAR.sub1[PAR.sub1$Months==12,]
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti',]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.2 <- PAR.sub1[PAR.sub1$mosquito=='Ae. albopictus',]
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==max(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==min(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub2 <- PAR.ref2a[PAR.ref2a$Year=='2070',]
PAR.sub2 <- PAR.sub2[PAR.sub2$Months==12,]
PAR.sub2.1 <- PAR.sub2[PAR.sub2$mosquito=='Ae. aegypti',]
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.1
Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub2.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk)
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub2.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub2.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub1 <- PAR.ref2a[PAR.ref2a$Year=='2050',]
PAR.sub1 <- PAR.sub1[PAR.sub1$Months==12,]
PAR.sub1.1 <- PAR.sub1[PAR.sub1$mosquito=='Ae. aegypti',]
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==max(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.1[PAR.sub1.1$PopulationAtRisk==min(PAR.sub1.1$PopulationAtRisk),]$Scenario
PAR.sub1.2 <- PAR.sub1[PAR.sub1$mosquito=='Ae. albopictus',]
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==max(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub1.2[PAR.sub1.2$PopulationAtRisk==min(PAR.sub1.2$PopulationAtRisk),]$Scenario
PAR.sub2 <- PAR.ref2a[PAR.ref2a$Year=='2070',]
PAR.sub2 <- PAR.sub2[PAR.sub2$Months==12,]
PAR.sub2.1 <- PAR.sub2[PAR.sub2$mosquito=='Ae. aegypti',]
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==max(PAR.sub2.1$PopulationAtRisk),]$Scenario
PAR.sub2.1[PAR.sub2.1$PopulationAtRisk==min(PAR.sub2.1$PopulationAtRisk),]$Scenario
PAR.sub2.2 <- PAR.sub2[PAR.sub2$mosquito=='Ae. albopictus',]
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==max(PAR.sub2.2$PopulationAtRisk),]$Scenario
PAR.sub2.2[PAR.sub2.2$PopulationAtRisk==min(PAR.sub2.2$PopulationAtRisk),]$Scenario
setwd('C:/Users/cjcar/Documents/Github/helminths')
load('intMats.RData')
View(data.frame(intMats$Iceland))
base <- data.frame(matrix(nrow=0,ncol=3))
for (i in 1:length(intMats)) {
df <- data.frame(intMats[[i]])
sp <- colnames(df)
if(length(sp)>0) {
stuff <- data.frame(matrix(nrow=length(sp),ncol=3))
stuff[,1] <- names(intMats)[i]
stuff[,2] <- sp
for (j in 1:length(sp)) {
stuff[j,3] <- as.numeric(sum(df[,j])>0)
}
base <- rbind(base,stuff)
print(i)
}
}
basemat <- acast(base, X2~X1, value.var="X3")
basemat <- data.frame(basemat)
library(reshape2)
library(vegan)
basemat <- acast(base, X2~X1, value.var="X3")
basemat <- data.frame(basemat)
sp1 <- specaccum(basemat)
summary(sp1)
sp1
plot(sp1)
basemat <- acast(base, X2~X1, value.var="X3",fun=sum)
basemat <- data.frame(basemat)
sp1 <- specaccum(basemat,'random')
summary(sp1)
plot(sp1)
head(basemat)
basemat <- acast(base, X2~X1, value.var="X3",fun=sum)
head(basemat)
basemat <- acast(base, X1~X2, value.var="X3",fun=sum)
basemat <- data.frame(basemat)
sp1 <- specaccum(basemat,'random')
summary(sp1)
plot(sp1)
mod1 <- fitspecaccum(sp1,'lomolino')
mod2 <- fitspecaccum(sp1,'gleason')
mod3 <- fitspecaccum(sp1,'asymp')
mod4 <- fitspecaccum(sp1,'gompertz')
mod5 <- fitspecaccum(sp1,'michaelis-menten')
mod6 <- fitspecaccum(sp1,'logis')
mod7 <- fitspecaccum(sp1,'weibull')
mod2
plot(mod2)
mod2$coefficients
mod3$coefficients
mod7 <- fitspecaccum(sp1,'weibull')
mod6$coefficients
hist(mod6$coefficients$Asym)
hist(mod6$coefficients)
hist(mod6$coefficients[1,])
plot(mod6$coefficients[1,])
sp1 <- specaccum(basemat)
plot(sp1)
library(reshape2)
library(vegan)
setwd('C:/Users/cjcar/Documents/Github/helminths')
load('intMats.RData')
View(data.frame(intMats$Iceland))
base <- data.frame(matrix(nrow=0,ncol=3))
for (i in 1:length(intMats)) {
df <- data.frame(intMats[[i]])
sp <- colnames(df)
if(length(sp)>0) {
stuff <- data.frame(matrix(nrow=length(sp),ncol=3))
stuff[,1] <- names(intMats)[i]
stuff[,2] <- sp
for (j in 1:length(sp)) {
stuff[j,3] <- as.numeric(sum(df[,j])>0)
}
base <- rbind(base,stuff)
print(i)
}
}
basemat <- acast(base, X1~X2, value.var="X3",fun=sum)
basemat <- data.frame(basemat)
sp1 <- specaccum(basemat)
basemat <- acast(base, X1~X2, value.var="X3",fun=sum)
